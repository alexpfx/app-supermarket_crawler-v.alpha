[] construtores de visitor rule e collector ruler estao ambiguos.
[] evoluir parte de gravacao no banco
[] adequar testes unitarios classe collector
[] adicionar limite de recursividade
[] eliminar erro quando job eh rodado pela segunda vez
[] logar informacoes sobre o crawler: motivo de parada, tempo em execucao, etc.
[x] eliminar implementações de AbstractCrawler
[x] alterar abstract crawler para ser classe concreta, mudar nome para SuperMercadoCrawler
[x] testar api jsoup
[x] refatorar ribeirao crawler para adequar ao novo esquema para pegar links para visita
[x] eliminar construtores nao utilzados da classe collector
[x] adicionar recursividade ao crawler para pagar todas as paginas.
[x] configurar persistencia com hibernate
[x] organizar metodos e nomes na classe CrawlerBatchConfiguration
[x] configurar reader do batch para pegar dados do crawler
[x] configurar processor/transformar o to em produto
[x] criar condicao de parada para o crawler
[x] criar to especifico
[x] rodar app spring
[x] reorganizar pacotes
[x] criar taskletstep que starta o crawler
[x] configurar spring batch
[x] rodar job basico spring batch
[x] refatorar EAN
[x] criar teste unitario para testar o uso da classe Crawler runner, configurando para usar as configuracoes do spring
[x] criar listeners
[x] criar validador de EAN

[x] eliminar bibliotecas crawler4j e jsoup
[x] limpar codigo eliminando classes de dominio nao usadas

[x] rever codigo apontando necessidades de mudanças
[x] refatorar classes repository, criar camada intermediaria
[x] verificar se há outro padrão de código de produto, que não EAN
[x] definir tratamento de produtos que não possuem código EAN
[x] obter quantidade de produto
[x] usar hibernate
